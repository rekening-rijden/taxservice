2022-11-23 10:54:44.330  INFO 17516 --- [main] c.r.taxservice.TaxserviceApplication     : Starting TaxserviceApplication using Java 19 on DESKTOP-JIUFA6F with PID 17516 (E:\Repositories\rekeningrijden\taxservice\target\classes started by Rien Hannewijk in E:\Repositories\rekeningrijden\taxservice)
2022-11-23 10:54:44.333  INFO 17516 --- [main] c.r.taxservice.TaxserviceApplication     : No active profile set, falling back to 1 default profile: "default"
2022-11-23 10:54:44.783  INFO 17516 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-11-23 10:54:44.811  INFO 17516 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2022-11-23 10:54:45.038  INFO 17516 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-23 10:54:45.042  INFO 17516 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-11-23 10:54:45.042  INFO 17516 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.68]
2022-11-23 10:54:45.097  INFO 17516 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-11-23 10:54:45.097  INFO 17516 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 738 ms
2022-11-23 10:54:45.113  INFO 17516 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-11-23 10:54:45.163  INFO 17516 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-11-23 10:54:45.169  INFO 17516 --- [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2022-11-23 10:54:45.239  INFO 17516 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-11-23 10:54:45.262  INFO 17516 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.12.Final
2022-11-23 10:54:45.342  INFO 17516 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-11-23 10:54:45.386  INFO 17516 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-11-23 10:54:45.627  INFO 17516 --- [main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'file:/E:/Repositories/rekeningrijden/taxservice/target/classes/import.sql'
2022-11-23 10:54:45.647  INFO 17516 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-11-23 10:54:45.651  INFO 17516 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-11-23 10:54:45.809  WARN 17516 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'timeTaxService' defined in file [E:\Repositories\rekeningrijden\taxservice\target\classes\com\rekeningrijden\taxservice\service\TimeTaxService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'timeTaxRepository' defined in com.rekeningrijden.taxservice.repository.TimeTaxRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
2022-11-23 10:54:45.809  INFO 17516 --- [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-11-23 10:54:45.810  INFO 17516 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-11-23 10:54:45.811  INFO 17516 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-11-23 10:54:45.812  INFO 17516 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-11-23 10:54:45.818  INFO 17516 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-11-23 10:54:45.835 ERROR 17516 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'timeTaxService' defined in file [E:\Repositories\rekeningrijden\taxservice\target\classes\com\rekeningrijden\taxservice\service\TimeTaxService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'timeTaxRepository' defined in com.rekeningrijden.taxservice.repository.TimeTaxRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.23.jar:5.3.23]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.23.jar:5.3.23]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.5.jar:2.7.5]
	at com.rekeningrijden.taxservice.TaxserviceApplication.main(TaxserviceApplication.java:12) ~[classes/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'timeTaxRepository' defined in com.rekeningrijden.taxservice.repository.TimeTaxRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.23.jar:5.3.23]
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133) ~[na:na]
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061) ~[na:na]
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1921) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at java.base/java.util.Optional.map(Optional.java:260) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.util.Lazy.get(Lazy.java:115) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.23.jar:5.3.23]
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103) ~[spring-data-commons-2.7.5.jar:2.7.5]
	... 52 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	... 56 common frames omitted

2022-11-23 13:06:20.041  INFO 18452 --- [main] c.r.taxservice.TaxserviceApplication     : Starting TaxserviceApplication using Java 19 on DESKTOP-JIUFA6F with PID 18452 (E:\Repositories\rekeningrijden\taxservice\target\classes started by Rien Hannewijk in E:\Repositories\rekeningrijden\taxservice)
2022-11-23 13:06:20.042  INFO 18452 --- [main] c.r.taxservice.TaxserviceApplication     : No active profile set, falling back to 1 default profile: "default"
2022-11-23 13:06:20.382  INFO 18452 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-11-23 13:06:20.408  INFO 18452 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 3 JPA repository interfaces.
2022-11-23 13:06:20.637  INFO 18452 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-23 13:06:20.641  INFO 18452 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-11-23 13:06:20.641  INFO 18452 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.68]
2022-11-23 13:06:20.699  INFO 18452 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-11-23 13:06:20.699  INFO 18452 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 631 ms
2022-11-23 13:06:20.716  INFO 18452 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-11-23 13:06:20.763  INFO 18452 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-11-23 13:06:20.768  INFO 18452 --- [main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2022-11-23 13:06:20.827  INFO 18452 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-11-23 13:06:20.847  INFO 18452 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.12.Final
2022-11-23 13:06:20.911  INFO 18452 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-11-23 13:06:20.954  INFO 18452 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2022-11-23 13:06:21.188  INFO 18452 --- [main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'file:/E:/Repositories/rekeningrijden/taxservice/target/classes/import.sql'
2022-11-23 13:06:21.192  INFO 18452 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-11-23 13:06:21.196  INFO 18452 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-11-23 13:06:21.351  WARN 18452 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'timeTaxService' defined in file [E:\Repositories\rekeningrijden\taxservice\target\classes\com\rekeningrijden\taxservice\service\TimeTaxService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'timeTaxRepository' defined in com.rekeningrijden.taxservice.repository.TimeTaxRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
2022-11-23 13:06:21.351  INFO 18452 --- [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2022-11-23 13:06:21.352  INFO 18452 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2022-11-23 13:06:21.353  INFO 18452 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2022-11-23 13:06:21.354  INFO 18452 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-11-23 13:06:21.363  INFO 18452 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-11-23 13:06:21.377 ERROR 18452 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'timeTaxService' defined in file [E:\Repositories\rekeningrijden\taxservice\target\classes\com\rekeningrijden\taxservice\service\TimeTaxService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'timeTaxRepository' defined in com.rekeningrijden.taxservice.repository.TimeTaxRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.23.jar:5.3.23]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.23.jar:5.3.23]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.5.jar:2.7.5]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.5.jar:2.7.5]
	at com.rekeningrijden.taxservice.TaxserviceApplication.main(TaxserviceApplication.java:12) ~[classes/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'timeTaxRepository' defined in com.rekeningrijden.taxservice.repository.TimeTaxRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.23.jar:5.3.23]
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween(); Reason: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197) ~[na:na]
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133) ~[na:na]
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061) ~[na:na]
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1921) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at java.base/java.util.Optional.map(Optional.java:260) ~[na:na]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.util.Lazy.get(Lazy.java:115) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.23.jar:5.3.23]
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween()! Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103) ~[spring-data-commons-2.7.5.jar:2.7.5]
	... 52 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract com.rekeningrijden.taxservice.entity.TimeTax com.rekeningrijden.taxservice.repository.TimeTaxRepository.findByStartTimeBetween() expects at least 1 arguments but only found 0. This leaves an operator of type BETWEEN for property startTime unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90) ~[spring-data-jpa-2.7.5.jar:2.7.5]
	... 56 common frames omitted

